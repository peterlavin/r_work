demo()
demo()
demo(package = .packages(all.available = TRUE))
intervals
demo(package = .packages(intervals))
q
q()
read.csv("~/Rwork/projectmark.csv")
d <- read.csv("~/Rwork/projectmark.csv")
d
hist(d)
hist(d$projectmark)
h <- hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
p <- read.csv("~/Rwork/projectmark.csv")
h <- hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
rnorm(h)
plot(rnorm(h))
hist(rnorm(h))
rnorm(h)
xx <- rnorm(h)
xx
hist(xx, greq=FALSE)
curve(dnorm(x, mean=5, sd=10), add=TRUE)
curve(dnorm(x, mean=5, sd=10), add=TRUE)
x <- rnorm(1000) hist(x, freq = FALSE, col = “grey”)
curve(dnorm, col = 2, add = TRUE)
rnorm(1000) hist(x, freq = FALSE, col = “grey”) curve(dnorm, col = 2, add = TRUE)
x <- rnorm(1000) hist(x, freq = FALSE, col = “grey”) curve(dnorm, col = 2, add = TRUE)
x <- rnorm(1000)
hist(x, freq = FALSE, col = “grey”) curve(dnorm, col = 2, add = TRUE)
hist(x, freq = FALSE, col = “grey”)
x
x <- rnorm(1000)
hist(x, freq = FALSE, col = “grey”)
hist(x, freq = FALSE)
curve(dnorm, col = 2, add = TRUE)
x <- rnorm(100)
x
hist(x, freq = FALSE)
curve(dnorm, col = 2, add = TRUE)
plot.new
plot.new(x)
plot.new()
x <- rnorm(100)
hist(x, freq = FALSE)
curve(dnorm, col = 2, add = TRUE)
?rnorm
h <- hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
curve(yfit, col = 2, add = TRUE)
curve(dnorm, col = 2, add = TRUE)
hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
p
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
read.csv("~/Rwork/incomp_ans.csv")
d = read.csv("~/Rwork/incomp_ans.csv")
d
hist(d$incomplete_answer_count, freq=FALSE, breaks=c(1,2,3,4,5), col="blue", main="Histogram of \n.", xlab="Incomplete Answer Count.")
hist(d$incomplete_answer_count, freq=FALSE, breaks=c(1,2,3,4,5), col="blue", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incomplete_answer_count, freq=FALSE, breaks=c(1,2,3,4,5), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
d = read.csv("~/Rwork/incorr_ans.csv")
d
hist(d$incomplete_answer_count, freq=FALSE, breaks=c(1,2,3,4,5), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incorrect_answer_count, freq=FALSE, breaks=c(1,2,3,4,5), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incorrect_answer_count, freq=FALSE, breaks=32, col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incorrect_answer_count, freq=FALSE, breaks=23, col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incorrect_answer_count, freq=FALSE, breaks=22, col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incorrect_answer_count, freq=FALSE, breaks=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
hist(d$incomplete_answer_count, breaks=c(1,2,3,4,5), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
read.csv("~/Rwork/incomp_ans.csv")
d <- read.csv("~/Rwork/incomp_ans.csv")
c <- read.csv("~/Rwork/incomp_ans.csv")
hist(c$incomplete_answer_count, breaks=c(1,2,3,4,5), col="red", main="Histogram of \nincomplete_answer_count .", xlab="Incomplete Answer Count.")
d <- read.csv("~/Rwork/incorr_ans.csv")
hist(d$incorrect_answer_count, col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
d
hist(d$incorrect_answer_count, col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=1  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=(5)  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(5)  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(1,5,10,15,20,25,30,35)  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(1,5,10,15,20,25,30,35),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(22),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(23),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(33),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(40),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=40,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=22,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=11,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=44,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=22,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
d
hist(d$incorrect_answer_count, breaks=32,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
d <- read.csv("~/Rwork/incorr_ans.csv")
d
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=35,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=23,  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(0,5,10,15,20,25,30),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(0,5,10,15,20,25,30,35),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36),  col="green", main="Histogram of \nincorrect_answer_count .", xlab="Incorrect Answer Count.")
hist(d$incorrect_answer_count, breaks=c(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36),  col="green", main="Histogram of \nincorrect_answer_count.", xlab="Incorrect Answer Count.")
a
b
c
hist(c$incomplete_answer_count, breaks=c(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36),  col="yellow", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
c
hist(c$incomplete_answer_count, breaks=c(5),  col="yellow", main="Histogram of \nincomplete_answer_count.", xlab="Incomplete Answer Count.")
c
boxplot(c)
boxplot(c, col="yellow")
?boxplot
boxplot(c, col="yellow", varwidth=TRUE)
boxplot(c, col="yellow", width=1)
boxplot(c, col="yellow", width=0.1)
?boxplot
boxplot(c, col="yellow", width=0.01)
boxplot(c, col="yellow")
?boxplot
boxplot(c, col="yellow")
c
boxplot(c, col="yellow")
d
boxplot(d, col="yellow")
boxplot(d, col="red")
d
d <- read.csv("~/Rwork/incomp_ans.csv")
d
p <- read.csv("~/Rwork/incorr_ans.csv")
d
boxplot(d, col="red")
p
boxplot(p, col="blue")
?boxplot
boxplot(p, col="blue", names)
boxplot(p, col="blue", ylab="test")
boxplot(p, col="blue", ylab="Project Mark")
d
boxplot(d, col="red", ylab="Incorrect Answer Count")
p
c
boxplot(c, col="yellow", ylab="Incomplete Answer Count")
d
a
b
c
d
e
p
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
?norm
??norm
p
dnorm(p$projectmark)
curve(dnorm(p$projectmark))
curve(p)
curve(p$projectmark)
seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
xfit
dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit
plot(yfit)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
plot(yfit)
lines(yfit)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
lines(yfit)
length(p$projectmark)
yfit*diff(h$mids[1:2])*length(p$projectmark)
yfit*diff(h$mids[1:2])
yfit*diff(h$mids[1:2])*length(p$projectmark)
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
yfit
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
lines(xfit, yfit, col="blue", lwd=2)
lines(xfit, yfit, col="blue", lwd=10)
lines(xfit, yfit, col="yellow", lwd=10)
lines(xfit, yfit, col="yellow", lwd=10)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
lines(xfit, yfit, col="yellow", lwd=10)
lines(xfit, yfit, col="yellow", lwd=10, add=TRUE)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
curve(yfit, col="yellow", add = TRUE)
curve(dnorm, col="yellow", add = TRUE)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
curve(dnorm, col="yellow", add = TRUE)
curve(dnorm, col="red", add = TRUE)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
curve(dnorm, col="red", add = TRUE)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
curve(dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark)), col="red" add=TRUE)
curve(dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark)), col="red", add=TRUE)
hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
curve(yfit, col=2, add=TRUE)
curve(dnorm, col=2, add=TRUE)
plot(yfit)
curve(yfit)
plot(yfit)
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
plot(yfit)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
lines(xfit, yfit, col="blue", lwd=2)
lines(xfit, yfit, col="green", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
lines(xfit, yfit, col="green", lwd=2)
h <- hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
lines(xfit, yfit, col="green", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Histogram of \nprojectmark.", xlab="Project Mark.")
lines(xfit, yfit, col="red", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Density Plot of \nprojectmark with Normal Curve.", xlab="Project Mark.")
lines(xfit, yfit, col="red", lwd=2)
boxplot(c, col="yellow", ylab="Incomplete Answer Count", main="Incomplete Answer Boxplot")
boxplot(d, col="red", ylab="Incorrect Answer Count")
boxplot(d, col="red", ylab="Incorrect Answer Count", main="Incorrect Answer Boxplot")
boxplot(p, col="blue", ylab="Project Mark")
boxplot(p, col="blue", ylab="Project Mark", main="Project Mark Boxplot")
p
mean(p)
sd(p)
sd^2(p)
sd(p)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Density Plot of \nprojectmark with Normal Curve.", xlab="Project Mark.")
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
lines(xfit, yfit, col="red", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Density Plot of \nprojectmark with Normal Curve.", xlab="Project Mark.")
lines(xfit, yfit, col="red", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Density Plot of \nprojectmark with Normal Curve.", xlab="Project Mark.")
xfit <- seq(min(p$projectmark), max(p$projectmark), length = (max(p$projectmark) - min(p$projectmark)))
xfit
yfit <- dnorm(xfit,mean=mean(p$projectmark),sd=sd(p$projectmark))
yfit <- yfit*diff(h$mids[1:2])*length(p$projectmark)
lines(xfit, yfit, col="red", lwd=2)
lines(xfit, yfit, col="red", lwd=2)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="yellow", main="Density Plot of \nprojectmark with Normal Curve.", xlab="Project Mark.")
lines(xfit, yfit, col="red", lwd=2)
p
length(p)
length(p$projectmark
)
q()
p
q()
p
shapiro.test(p$projectmark)
d
shapiro.test(d$incorrect_answer_count)
shapiro.test(log(d$incorrect_answer_count))
c
shapiro.test(c$incomplete_answer_count)
?shapiro.test
?shapiro.test
?normal
??normal
?shapiro.test
shapiro.test(c$incomplete_answer_count)
shapiro.test(log(c$incomplete_answer_count))
log(c$incomplete_answer_count)
c$incomplete_answer_count
p
shapiro.test(p)
shapiro.test(p$projectmark)
d
d$incorrect_answer_count
shapiro.test(d$incorrect_answer_count)
shapiro.test(log((d$incorrect_answer_count))
)
shapiro.test(log((d$incorrect_answer_count)))
a
b
c
c$incomplete_answer_count
shapiro.test(c$incomplete_answer_count)
shapiro.test(log(c$incomplete_answer_count))
log(c$incomplete_answer_count)
d$
0
d
p
p$projectmark
shapiro.test(p$projectmark)
shapiro.test(log(p$projectmark))
??Anderson
??normality
?shapiro
?Shapiro
??Shapiro
??normality
?Shapiro-Wilk Normality Test
?Shapiro-Wilk
?shapiro
?normality
??normality
?normality test
??normality test
??normality\test
??normality\ test
normality
??normality
?shapiro.test
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(1000, mean = 5, sd = 3))
shapiro.test(rnorm(10000, mean = 5, sd = 3))
shapiro.test(rnorm(5000, mean = 5, sd = 3))
shapiro.test(rnorm(3, mean = 5, sd = 3))
?shapiro.test
a
b
c
p
shapiro.test(p)
shapiro.test(p$projectmark)
shapiro.test(p$projectmark)
p <- read.csv("~/Rwork/totalmark.csv")
p <- read.csv("~/Rwork/projectmark.csv")
t <- read.csv("~/Rwork/totalmark.csv")
t
p
t
shapiro.test(t$totalmark)
shapiro.test(p$projectmark)
h <- hist(p$projectmark, freq=FALSE, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
h
?plot
hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
plot(h)
hist(p$projectmark, breaks=c(40,50,60,70,80,90,100), col="blue", main="Histogram of \nprojectmark.", xlab="Project Mark.")
?shapiro.test
?shapiro.test
a
b
c
d
p
shapiro.test(p)
shapiro.test(p$projectmark)
shapiro.test(p$projectmark)
q()
